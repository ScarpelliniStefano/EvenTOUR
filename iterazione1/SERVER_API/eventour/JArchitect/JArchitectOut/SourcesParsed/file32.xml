<root><type name="com.scarcolo.eventour.service.booking.BookingService" s="24"  vis="public"  kind="class"  dep ="false" fin ="false" sta ="false" abs ="false" n ="false" c="2" >
<annotations>
<annotation name="com.scarcolo.eventour.service.booking.Service"/>
</annotations><field name="bookingRepository" s="30" type="com.scarcolo.eventour.repository.booking.BookingRepository" vis="private"  fin ="false" sta ="false" c="0" >
<annotations><annotation name="com.scarcolo.eventour.service.booking.Autowired"/></annotations></field>
<field name="eventRepository" s="34" type="com.scarcolo.eventour.repository.event.EventRepository" vis="private"  fin ="false" sta ="false" c="0" >
<annotations><annotation name="com.scarcolo.eventour.service.booking.Autowired"/></annotations></field>
<field name="userRepository" s="38" type="com.scarcolo.eventour.repository.user.UserRepository" vis="private"  fin ="false" sta ="false" c="0" >
<annotations><annotation name="com.scarcolo.eventour.service.booking.Autowired"/></annotations></field>
<method name="add(com.scarcolo.eventour.model.booking.AddBookingRequest)" s="43" e="70" n ="false" sta ="false" sync ="false" vis="public" return="com.scarcolo.eventour.service.booking.ResponseEntity"  signature="(com.scarcolo.eventour.model.booking.AddBookingRequest)"><params><param type="com.scarcolo.eventour.model.booking.AddBookingRequest"/></params><dm p="com.scarcolo.eventour.model.booking.Booking" s="Booking(com.scarcolo.eventour.model.booking.AddBookingRequest)"/>
<dm p="com.scarcolo.eventour.model.booking.Booking" s="getEventId()"/>
<dm p="com.scarcolo.eventour.model.booking.Booking" s="getUserId()"/>
<dm p="java.util.Optional" s="get()"/>
<dm p="com.scarcolo.eventour.model.event.Event" s="getFreeSeat()"/>
<dm p="com.scarcolo.eventour.model.booking.Booking" s="getPrenotedSeat()"/>
<dm p="com.scarcolo.eventour.model.event.Event" s="setFreeSeat(java.lang.Integer)"/>
<dm p="com.scarcolo.eventour.model.event.Event" s="getFreeSeat()"/>
<dm p="com.scarcolo.eventour.model.booking.Booking" s="getPrenotedSeat()"/>
<metrics cc="4" cm="5" vars="4" loc="13"/></method><method name="modify(java.lang.String)" s="72" e="84" n ="false" sta ="false" sync ="false" vis="private" return="void"  signature="(java.lang.String)"><params><param type="java.lang.String"/></params><dm p="java.util.Optional" s="get()"/>
<dm p="com.scarcolo.eventour.model.booking.Booking" s="setCome(java.lang.Boolean)"/>
<metrics cc="2" cm="4" vars="2" loc="5"/></method><method name="delete(java.lang.String)" s="87" e="109" n ="false" sta ="false" sync ="false" vis="public" return="boolean"  signature="(java.lang.String)"><params><param type="java.lang.String"/></params><dm p="com.scarcolo.eventour.model.booking.Booking" s="getEventId()"/>
<dm p="java.util.Optional" s="get()"/>
<dm p="java.util.Optional" s="isPresent()"/>
<dm p="java.util.Optional" s="get()"/>
<dm p="com.scarcolo.eventour.model.event.Event" s="setFreeSeat(java.lang.Integer)"/>
<dm p="com.scarcolo.eventour.model.event.Event" s="getFreeSeat()"/>
<dm p="com.scarcolo.eventour.model.booking.Booking" s="getPrenotedSeat()"/>
<dm p="java.util.Optional" s="get()"/>
<dm p="com.scarcolo.eventour.model.booking.Booking" s="getId()"/>
<dm p="java.util.Optional" s="get()"/>
<metrics cc="3" cm="5" vars="3" loc="11"/></method><method name="getByIdUser(java.lang.String)" s="112" e="128" n ="false" sta ="false" sync ="false" vis="public" return="com.scarcolo.eventour.service.booking.ResponseEntity"  signature="(java.lang.String)"><params><param type="java.lang.String"/></params><dm p="com.scarcolo.eventour.repository.booking.BookingRepository" s="findByUserId(com.scarcolo.eventour.repository.booking.ObjectId)"/>
<metrics cc="3" cm="5" vars="3" loc="8"/></method><method name="getByIdUserEvent(java.lang.String,java.lang.String)" s="130" e="145" n ="false" sta ="false" sync ="false" vis="public" return="com.scarcolo.eventour.service.booking.ResponseEntity"  signature="(java.lang.String,java.lang.String)"><params><param type="java.lang.String"/><param type="java.lang.String"/></params><dm p="com.scarcolo.eventour.repository.booking.BookingRepository" s="findByUserIdAndEventId(java.lang.String,java.lang.String)"/>
<dm p="java.util.List" s="isEmpty()"/>
<metrics cc="3" cm="5" vars="2" loc="7"/></method><method name="getCheck(java.lang.String,java.lang.String)" s="147" e="165" n ="false" sta ="false" sync ="false" vis="public" return="com.scarcolo.eventour.service.booking.ResponseEntity"  signature="(java.lang.String,java.lang.String)"><params><param type="java.lang.String"/><param type="java.lang.String"/></params><dm p="java.util.Optional" s="isPresent()"/>
<dm p="java.lang.String" s="equalsIgnoreCase(java.lang.String)"/>
<dm p="com.scarcolo.eventour.model.booking.Booking" s="getEventId()"/>
<dm p="java.util.Optional" s="get()"/>
<dm p="com.scarcolo.eventour.service.booking.BookingService" s="modify(java.lang.String)"/>
<metrics cc="3" cm="6" vars="1" loc="7"/></method><method name="getById(java.lang.String)" s="167" e="179" n ="false" sta ="false" sync ="false" vis="public" return="com.scarcolo.eventour.service.booking.ResponseEntity"  signature="(java.lang.String)"><params><param type="java.lang.String"/></params><dm p="java.util.Optional" s="isPresent()"/>
<dm p="java.util.Optional" s="get()"/>
<metrics cc="2" cm="5" vars="1" loc="4"/></method>
</type></root>