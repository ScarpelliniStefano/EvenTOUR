<root><type name="com.scarcolo.eventour.service.user.UserService" s="44"  vis="public"  kind="class"  dep ="false" fin ="false" sta ="false" abs ="false" n ="false" c="2" >
<annotations>
<annotation name="com.scarcolo.eventour.service.user.Service"/>
</annotations><field name="userRepository" s="50" type="com.scarcolo.eventour.repository.user.UserRepository" vis="private"  fin ="false" sta ="false" c="0" >
<annotations><annotation name="com.scarcolo.eventour.service.user.Autowired"/></annotations></field>
<field name="managerRepository" s="54" type="com.scarcolo.eventour.repository.manager.ManagerRepository" vis="private"  fin ="false" sta ="false" c="0" >
<annotations><annotation name="com.scarcolo.eventour.service.user.Autowired"/></annotations></field>
<field name="adminRepository" s="58" type="com.scarcolo.eventour.repository.admin.AdminRepository" vis="private"  fin ="false" sta ="false" c="0" >
<annotations><annotation name="com.scarcolo.eventour.service.user.Autowired"/></annotations></field>
<field name="requestRepository" s="62" type="com.scarcolo.eventour.repository.manager.RequestRepository" vis="private"  fin ="false" sta ="false" c="0" >
<annotations><annotation name="com.scarcolo.eventour.service.user.Autowired"/></annotations></field>
<field name="ticketInspRepository" s="66" type="com.scarcolo.eventour.repository.ticketisp.TicketInspRepository" vis="private"  fin ="false" sta ="false" c="0" >
<annotations><annotation name="com.scarcolo.eventour.service.user.Autowired"/></annotations></field>
<field name="eventRepository" s="70" type="com.scarcolo.eventour.repository.event.EventRepository" vis="private"  fin ="false" sta ="false" c="0" >
<annotations><annotation name="com.scarcolo.eventour.service.user.Autowired"/></annotations></field>
<field name="bookingRepository" s="74" type="com.scarcolo.eventour.repository.booking.BookingRepository" vis="private"  fin ="false" sta ="false" c="0" >
<annotations><annotation name="com.scarcolo.eventour.service.user.Autowired"/></annotations></field>
<method name="add(com.scarcolo.eventour.model.user.AddUserRequest)" s="79" e="93" n ="false" sta ="false" sync ="false" vis="public" return="com.scarcolo.eventour.service.user.ResponseEntity"  signature="(com.scarcolo.eventour.model.user.AddUserRequest)"><params><param type="com.scarcolo.eventour.model.user.AddUserRequest"/></params><dm p="com.scarcolo.eventour.model.user.User" s="User(com.scarcolo.eventour.model.user.AddUserRequest)"/>
<dm p="com.scarcolo.eventour.model.user.UserResponse" s="UserResponse(com.scarcolo.eventour.model.user.User)"/>
<metrics cc="2" cm="5" vars="1" loc="5"/></method><method name="update(com.scarcolo.eventour.model.user.EditUserRequest)" s="96" e="132" n ="false" sta ="false" sync ="false" vis="public" return="com.scarcolo.eventour.service.user.ResponseEntity"  signature="(com.scarcolo.eventour.model.user.EditUserRequest)"><params><param type="com.scarcolo.eventour.model.user.EditUserRequest"/></params><dm p="java.util.Optional" s="get()"/>
<dm p="com.scarcolo.eventour.model.user.User" s="setDateOfBirth(java.util.Date)"/>
<dm p="com.scarcolo.eventour.functions.Functionalities" s="convertToDate(java.time.LocalDate)"/>
<dm p="com.scarcolo.eventour.model.user.User" s="setSex(java.lang.String)"/>
<dm p="com.scarcolo.eventour.model.user.User" s="setSurname(java.lang.String)"/>
<dm p="com.scarcolo.eventour.model.user.User" s="setName(java.lang.String)"/>
<dm p="com.scarcolo.eventour.model.user.User" s="setResidence(com.scarcolo.eventour.model.Location)"/>
<dm p="com.scarcolo.eventour.model.user.User" s="setTypes(java.lang.String[])"/>
<dm p="com.scarcolo.eventour.model.user.UserResponse" s="UserResponse(com.scarcolo.eventour.model.user.User)"/>
<metrics cc="9" cm="5" vars="2" loc="20"/></method><method name="getById(java.lang.String)" s="135" e="149" n ="false" sta ="false" sync ="false" vis="public" return="com.scarcolo.eventour.service.user.ResponseEntity"  signature="(java.lang.String)"><params><param type="java.lang.String"/></params><dm p="java.util.Optional" s="isPresent()"/>
<dm p="com.scarcolo.eventour.model.user.UserResponse" s="UserResponse(com.scarcolo.eventour.model.user.User)"/>
<dm p="java.util.Optional" s="get()"/>
<metrics cc="2" cm="5" vars="1" loc="4"/></method><method name="delete(java.lang.String)" s="152" e="170" n ="false" sta ="false" sync ="false" vis="public" return="com.scarcolo.eventour.service.user.ResponseEntity"  signature="(java.lang.String)"><params><param type="java.lang.String"/></params><dm p="com.scarcolo.eventour.repository.booking.BookingRepository" s="findByUserId(java.lang.String)"/>
<dm p="com.scarcolo.eventour.model.user.User" s="getId()"/>
<dm p="java.util.Optional" s="get()"/>
<dm p="com.scarcolo.eventour.model.event.EventBookedResponse" s="getId()"/>
<dm p="com.scarcolo.eventour.model.user.User" s="getId()"/>
<dm p="java.util.Optional" s="get()"/>
<metrics cc="3" cm="5" vars="2" loc="8"/></method><method name="getAll()" s="172" e="190" n ="false" sta ="false" sync ="false" vis="public" return="com.scarcolo.eventour.service.user.ResponseEntity"  signature="()"><dm p="java.util.ArrayList" s="ArrayList&lt;User&gt;()"/>
<dm p="java.util.List" s="isEmpty()"/>
<dm p="java.util.ArrayList" s="ArrayList&lt;UserResponse&gt;()"/>
<dm p="java.util.List" s="add(java.lang.Object)"/>
<dm p="com.scarcolo.eventour.model.user.UserResponse" s="UserResponse(com.scarcolo.eventour.model.user.User)"/>
<metrics cc="4" cm="4" vars="2" loc="10"/></method><method name="getAccount(java.lang.String,java.lang.String)" s="192" e="269" n ="false" sta ="false" sync ="false" vis="public" return="com.scarcolo.eventour.service.user.ResponseEntity"  signature="(java.lang.String,java.lang.String)"><params><param type="java.lang.String"/><param type="java.lang.String"/></params><dm p="java.lang.String" s="isEmpty()"/>
<dm p="java.lang.String" s="startsWith(java.lang.String)"/>
<f p="null" s="length"/>
<dm p="java.lang.String" s="split(java.lang.String)"/>
<dm p="com.scarcolo.eventour.repository.ticketisp.TicketInspRepository" s="findByCode(java.lang.String)"/>
<dm p="java.util.List" s="size()"/>
<dm p="com.scarcolo.eventour.model.AccountResponse" s="AccountResponse(java.lang.String,java.lang.Object)"/>
<dm p="java.lang.String" s="equals(java.lang.Object)"/>
<dm p="com.scarcolo.eventour.functions.Functionalities" s="getMd5(java.lang.String)"/>
<dm p="com.scarcolo.eventour.model.ticketinsp.TicketInsp" s="getPassword()"/>
<dm p="com.scarcolo.eventour.model.ticketinsp.TicketInspResponse" s="TicketInspResponse(com.scarcolo.eventour.model.ticketinsp.TicketInsp)"/>
<dm p="com.scarcolo.eventour.model.AccountResponse" s="AccountResponse(java.lang.String,java.lang.Object)"/>
<dm p="com.scarcolo.eventour.model.AccountResponse" s="AccountResponse(java.lang.String,java.lang.Object)"/>
<dm p="com.scarcolo.eventour.repository.user.UserRepository" s="findByMail(java.lang.String)"/>
<dm p="java.util.List" s="isEmpty()"/>
<dm p="com.scarcolo.eventour.repository.user.UserRepository" s="findbyUsername(java.lang.String)"/>
<dm p="com.scarcolo.eventour.repository.manager.ManagerRepository" s="findByMail(java.lang.String)"/>
<dm p="java.util.List" s="isEmpty()"/>
<dm p="java.util.List" s="isEmpty()"/>
<dm p="com.scarcolo.eventour.repository.admin.AdminRepository" s="findByMail(java.lang.String)"/>
<dm p="java.util.List" s="isEmpty()"/>
<dm p="com.scarcolo.eventour.model.AccountResponse" s="AccountResponse(java.lang.String,java.lang.Object)"/>
<dm p="java.lang.String" s="equals(java.lang.Object)"/>
<dm p="com.scarcolo.eventour.functions.Functionalities" s="getMd5(java.lang.String)"/>
<dm p="com.scarcolo.eventour.model.admin.Admin" s="getPassword()"/>
<dm p="java.util.List" s="get(int)"/>
<dm p="com.scarcolo.eventour.model.admin.AdminResponse" s="AdminResponse(com.scarcolo.eventour.model.admin.Admin)"/>
<dm p="java.util.List" s="get(int)"/>
<dm p="com.scarcolo.eventour.model.AccountResponse" s="AccountResponse(java.lang.String,java.lang.Object)"/>
<dm p="com.scarcolo.eventour.model.AccountResponse" s="AccountResponse(java.lang.String,java.lang.Object)"/>
<dm p="java.util.List" s="isEmpty()"/>
<dm p="java.lang.String" s="equals(java.lang.Object)"/>
<dm p="com.scarcolo.eventour.functions.Functionalities" s="getMd5(java.lang.String)"/>
<dm p="com.scarcolo.eventour.model.user.User" s="getPassword()"/>
<dm p="java.util.List" s="get(int)"/>
<dm p="com.scarcolo.eventour.model.user.UserResponse" s="UserResponse(com.scarcolo.eventour.model.user.User)"/>
<dm p="java.util.List" s="get(int)"/>
<dm p="com.scarcolo.eventour.model.AccountResponse" s="AccountResponse(java.lang.String,java.lang.Object)"/>
<dm p="com.scarcolo.eventour.model.AccountResponse" s="AccountResponse(java.lang.String,java.lang.Object)"/>
<dm p="java.lang.String" s="equals(java.lang.Object)"/>
<dm p="com.scarcolo.eventour.functions.Functionalities" s="getMd5(java.lang.String)"/>
<dm p="com.scarcolo.eventour.model.manager.Manager" s="getPassword()"/>
<dm p="java.util.List" s="get(int)"/>
<dm p="java.util.List" s="get(int)"/>
<dm p="com.scarcolo.eventour.repository.manager.RequestRepository" s="findByManagerId(java.lang.String)"/>
<dm p="com.scarcolo.eventour.model.manager.Manager" s="getId()"/>
<dm p="java.util.List" s="get(int)"/>
<dm p="com.scarcolo.eventour.model.request.Request" s="isActive()"/>
<dm p="com.scarcolo.eventour.model.AccountResponse" s="AccountResponse(java.lang.String,java.lang.Object)"/>
<dm p="java.time.LocalDate" s="plusYears(long)"/>
<dm p="com.scarcolo.eventour.functions.Functionalities" s="convertToLocalDate(java.util.Date)"/>
<dm p="com.scarcolo.eventour.model.request.Request" s="getDateRenewal()"/>
<dm p="java.time.LocalDate" s="isAfter(java.time.chrono.ChronoLocalDate)"/>
<dm p="java.time.LocalDate" s="now()"/>
<dm p="com.scarcolo.eventour.model.manager.ManagerPlusResponse" s="ManagerPlusResponse(com.scarcolo.eventour.model.manager.Manager,com.scarcolo.eventour.model.request.Request)"/>
<dm p="java.util.List" s="get(int)"/>
<dm p="com.scarcolo.eventour.model.AccountResponse" s="AccountResponse(java.lang.String,java.lang.Object)"/>
<dm p="com.scarcolo.eventour.model.AccountResponse" s="AccountResponse(java.lang.String,java.lang.Object)"/>
<dm p="com.scarcolo.eventour.model.AccountResponse" s="AccountResponse(java.lang.String,java.lang.Object)"/>
<metrics cc="18" cm="6" vars="7" loc="41"/></method><method name="getByIdUser(java.lang.String)" s="274" e="288" n ="false" sta ="false" sync ="false" vis="private" return="java.util.List"  signature="(java.lang.String)"><params><param type="java.lang.String"/></params><dm p="com.scarcolo.eventour.repository.booking.BookingRepository" s="findByUserId(java.lang.String)"/>
<metrics cc="2" cm="5" vars="1" loc="4"/></method><method name="getEvenTour(java.lang.String,java.lang.Integer,java.lang.Integer)" s="290" e="426" n ="false" sta ="false" sync ="false" vis="public" return="com.scarcolo.eventour.service.user.ResponseEntity"  signature="(java.lang.String,java.lang.Integer,java.lang.Integer)"><params><param type="java.lang.String"/><param type="java.lang.Integer"/><param type="java.lang.Integer"/></params><dm p="java.util.Optional" s="isPresent()"/>
<dm p="java.util.Optional" s="get()"/>
<dm p="com.scarcolo.eventour.service.user.UserService" s="getByIdUser(java.lang.String)"/>
<dm p="com.scarcolo.eventour.repository.event.EventRepository" s="findByfreeSeatGreaterThanNumPersone(java.lang.Integer,com.scarcolo.eventour.repository.event.Sort)"/>
<dm p="java.util.ArrayList" s="ArrayList&lt;Event&gt;()"/>
<dm p="java.util.List" s="size()"/>
<dm p="java.util.List" s="remove(java.lang.Object)"/>
<dm p="com.scarcolo.eventour.model.event.EventBookedResponse" s="getEvent()"/>
<dm p="java.util.List" s="get(int)"/>
<dm p="java.time.LocalDateTime" s="toLocalDate()"/>
<dm p="com.scarcolo.eventour.model.event.Event" s="getDataOra()"/>
<dm p="com.scarcolo.eventour.model.event.EventBookedResponse" s="getEvent()"/>
<dm p="java.util.List" s="get(int)"/>
<dm p="java.util.Collection" s="removeIf(java.util.function.Predicate)"/>
<dm p="java.time.LocalDate" s="isEqual(java.time.chrono.ChronoLocalDate)"/>
<dm p="java.time.LocalDateTime" s="toLocalDate()"/>
<dm p="com.scarcolo.eventour.model.event.Event" s="getDataOra()"/>
<dm p="com.scarcolo.eventour.model.Location" s="getLat()"/>
<dm p="com.scarcolo.eventour.model.user.User" s="getResidence()"/>
<dm p="com.scarcolo.eventour.model.Location" s="getLng()"/>
<dm p="com.scarcolo.eventour.model.user.User" s="getResidence()"/>
<dm p="java.util.ArrayList" s="ArrayList&lt;Event&gt;(java.util.Collection)"/>
<dm p="java.util.Collection" s="removeIf(java.util.function.Predicate)"/>
<dm p="com.scarcolo.eventour.model.Location" s="getLat()"/>
<dm p="com.scarcolo.eventour.model.event.Event" s="getLocation()"/>
<dm p="com.scarcolo.eventour.model.Location" s="getLng()"/>
<dm p="com.scarcolo.eventour.model.event.Event" s="getLocation()"/>
<dm p="com.scarcolo.eventour.functions.Functionalities" s="distance(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)"/>
<dm p="com.scarcolo.eventour.model.Location" s="getLat()"/>
<dm p="com.scarcolo.eventour.model.event.Event" s="getLocation()"/>
<dm p="com.scarcolo.eventour.model.Location" s="getLng()"/>
<dm p="com.scarcolo.eventour.model.event.Event" s="getLocation()"/>
<dm p="java.util.List" s="size()"/>
<dm p="java.util.List" s="get(int)"/>
<dm p="java.util.List" s="size()"/>
<dm p="com.scarcolo.eventour.functions.Functionalities" s="distance(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)"/>
<dm p="com.scarcolo.eventour.model.Location" s="getLat()"/>
<dm p="com.scarcolo.eventour.model.event.Event" s="getLocation()"/>
<dm p="java.util.List" s="get(int)"/>
<dm p="com.scarcolo.eventour.model.Location" s="getLng()"/>
<dm p="com.scarcolo.eventour.model.event.Event" s="getLocation()"/>
<dm p="java.util.List" s="get(int)"/>
<f p="null" s="length"/>
<dm p="com.scarcolo.eventour.model.event.Event" s="getTypes()"/>
<dm p="java.util.List" s="get(int)"/>
<dm p="com.scarcolo.eventour.model.user.User" s="getTypes()"/>
<dm p="java.util.List" s="isEmpty()"/>
<dm p="java.time.LocalDate" s="isEqual(java.time.chrono.ChronoLocalDate)"/>
<dm p="java.time.LocalDateTime" s="toLocalDate()"/>
<dm p="com.scarcolo.eventour.model.event.Event" s="getDataOra()"/>
<dm p="java.util.List" s="get(int)"/>
<dm p="java.util.List" s="size()"/>
<dm p="java.time.LocalDateTime" s="toLocalDate()"/>
<dm p="com.scarcolo.eventour.model.event.Event" s="getDataOra()"/>
<dm p="java.util.List" s="get(int)"/>
<dm p="java.lang.String" s="equalsIgnoreCase(java.lang.String)"/>
<dm p="java.lang.String" s="toString()"/>
<dm p="com.scarcolo.eventour.model.event.Event" s="getTypes()"/>
<dm p="java.util.List" s="get(int)"/>
<dm p="java.lang.String" s="toString()"/>
<dm p="com.scarcolo.eventour.model.event.Event" s="getPrice()"/>
<dm p="java.util.List" s="get(int)"/>
<dm p="com.scarcolo.eventour.model.event.Event" s="getPrice()"/>
<dm p="java.util.List" s="get(int)"/>
<dm p="com.scarcolo.eventour.model.event.Event" s="getPrice()"/>
<dm p="java.util.List" s="get(int)"/>
<dm p="com.scarcolo.eventour.model.event.Event" s="getPrice()"/>
<dm p="com.scarcolo.eventour.functions.Functionalities" s="similType(java.lang.String,java.lang.String)"/>
<dm p="com.scarcolo.eventour.model.event.Event" s="getTypes()"/>
<dm p="java.util.List" s="get(int)"/>
<dm p="com.scarcolo.eventour.model.event.Event" s="getPrice()"/>
<dm p="java.util.List" s="get(int)"/>
<dm p="com.scarcolo.eventour.model.event.Event" s="getPrice()"/>
<dm p="java.util.List" s="get(int)"/>
<dm p="com.scarcolo.eventour.model.event.Event" s="getPrice()"/>
<dm p="java.util.List" s="get(int)"/>
<dm p="com.scarcolo.eventour.model.event.Event" s="getPrice()"/>
<dm p="java.util.List" s="add(java.lang.Object)"/>
<dm p="java.util.List" s="size()"/>
<dm p="java.util.List" s="remove(java.lang.Object)"/>
<dm p="java.util.ArrayList" s="ArrayList&lt;Event&gt;(java.util.Collection)"/>
<dm p="com.scarcolo.eventour.model.Location" s="getLat()"/>
<dm p="com.scarcolo.eventour.model.event.Event" s="getLocation()"/>
<dm p="java.util.List" s="get(int)"/>
<dm p="java.util.List" s="size()"/>
<dm p="com.scarcolo.eventour.model.Location" s="getLng()"/>
<dm p="com.scarcolo.eventour.model.event.Event" s="getLocation()"/>
<dm p="java.util.List" s="get(int)"/>
<dm p="java.util.List" s="size()"/>
<dm p="java.util.Collection" s="removeIf(java.util.function.Predicate)"/>
<dm p="com.scarcolo.eventour.model.Location" s="getLat()"/>
<dm p="com.scarcolo.eventour.model.event.Event" s="getLocation()"/>
<dm p="com.scarcolo.eventour.model.Location" s="getLng()"/>
<dm p="com.scarcolo.eventour.model.event.Event" s="getLocation()"/>
<dm p="com.scarcolo.eventour.functions.Functionalities" s="distance(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)"/>
<dm p="com.scarcolo.eventour.model.Location" s="getLat()"/>
<dm p="com.scarcolo.eventour.model.event.Event" s="getLocation()"/>
<dm p="com.scarcolo.eventour.model.Location" s="getLng()"/>
<dm p="com.scarcolo.eventour.model.event.Event" s="getLocation()"/>
<dm p="java.time.LocalDateTime" s="isBefore(java.time.chrono.ChronoLocalDateTime)"/>
<dm p="com.scarcolo.eventour.model.event.Event" s="getDataOra()"/>
<dm p="com.scarcolo.eventour.model.event.Event" s="getDataOra()"/>
<dm p="java.util.List" s="get(int)"/>
<dm p="java.util.List" s="size()"/>
<dm p="java.time.LocalDateTime" s="isAfter(java.time.chrono.ChronoLocalDateTime)"/>
<dm p="com.scarcolo.eventour.model.event.Event" s="getDataOra()"/>
<dm p="java.time.LocalDateTime" s="plusWeeks(long)"/>
<dm p="com.scarcolo.eventour.model.event.Event" s="getDataOra()"/>
<dm p="java.util.List" s="get(int)"/>
<dm p="java.util.List" s="size()"/>
<dm p="java.util.List" s="size()"/>
<dm p="java.util.List" s="get(int)"/>
<dm p="java.util.List" s="size()"/>
<dm p="com.scarcolo.eventour.functions.Functionalities" s="distance(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)"/>
<dm p="com.scarcolo.eventour.model.Location" s="getLat()"/>
<dm p="com.scarcolo.eventour.model.event.Event" s="getLocation()"/>
<dm p="java.util.List" s="get(int)"/>
<dm p="com.scarcolo.eventour.model.Location" s="getLng()"/>
<dm p="com.scarcolo.eventour.model.event.Event" s="getLocation()"/>
<dm p="java.util.List" s="get(int)"/>
<f p="null" s="length"/>
<dm p="com.scarcolo.eventour.model.event.Event" s="getTypes()"/>
<dm p="java.util.List" s="get(int)"/>
<dm p="com.scarcolo.eventour.model.user.User" s="getTypes()"/>
<dm p="java.util.List" s="isEmpty()"/>
<dm p="java.time.LocalDate" s="isEqual(java.time.chrono.ChronoLocalDate)"/>
<dm p="java.time.LocalDateTime" s="toLocalDate()"/>
<dm p="com.scarcolo.eventour.model.event.Event" s="getDataOra()"/>
<dm p="java.util.List" s="get(int)"/>
<dm p="java.util.List" s="size()"/>
<dm p="java.time.LocalDateTime" s="toLocalDate()"/>
<dm p="com.scarcolo.eventour.model.event.Event" s="getDataOra()"/>
<dm p="java.util.List" s="get(int)"/>
<dm p="java.lang.String" s="equalsIgnoreCase(java.lang.String)"/>
<dm p="java.lang.String" s="toString()"/>
<dm p="com.scarcolo.eventour.model.event.Event" s="getTypes()"/>
<dm p="java.util.List" s="get(int)"/>
<dm p="java.lang.String" s="toString()"/>
<dm p="com.scarcolo.eventour.model.event.Event" s="getPrice()"/>
<dm p="java.util.List" s="get(int)"/>
<dm p="com.scarcolo.eventour.model.event.Event" s="getPrice()"/>
<dm p="java.util.List" s="get(int)"/>
<dm p="com.scarcolo.eventour.model.event.Event" s="getPrice()"/>
<dm p="java.util.List" s="get(int)"/>
<dm p="com.scarcolo.eventour.model.event.Event" s="getPrice()"/>
<dm p="com.scarcolo.eventour.functions.Functionalities" s="similType(java.lang.String,java.lang.String)"/>
<dm p="com.scarcolo.eventour.model.event.Event" s="getTypes()"/>
<dm p="java.util.List" s="get(int)"/>
<dm p="com.scarcolo.eventour.model.event.Event" s="getPrice()"/>
<dm p="java.util.List" s="get(int)"/>
<dm p="com.scarcolo.eventour.model.event.Event" s="getPrice()"/>
<dm p="java.util.List" s="get(int)"/>
<dm p="com.scarcolo.eventour.model.event.Event" s="getPrice()"/>
<dm p="java.util.List" s="get(int)"/>
<dm p="com.scarcolo.eventour.model.event.Event" s="getPrice()"/>
<dm p="java.util.List" s="add(java.lang.Object)"/>
<dm p="java.util.ArrayList" s="ArrayList&lt;EventResponseTour&gt;()"/>
<dm p="java.util.List" s="size()"/>
<dm p="com.scarcolo.eventour.model.event.EventResponseTour" s="EventResponseTour(com.scarcolo.eventour.model.event.Event)"/>
<dm p="java.util.List" s="get(int)"/>
<dm p="com.scarcolo.eventour.functions.Functionalities" s="distance(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)"/>
<dm p="com.scarcolo.eventour.model.Location" s="getLat()"/>
<dm p="com.scarcolo.eventour.model.event.Event" s="getLocation()"/>
<dm p="java.util.List" s="get(int)"/>
<dm p="com.scarcolo.eventour.model.Location" s="getLng()"/>
<dm p="com.scarcolo.eventour.model.event.Event" s="getLocation()"/>
<dm p="java.util.List" s="get(int)"/>
<dm p="com.scarcolo.eventour.functions.Functionalities" s="distance(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)"/>
<dm p="com.scarcolo.eventour.model.Location" s="getLat()"/>
<dm p="com.scarcolo.eventour.model.event.Event" s="getLocation()"/>
<dm p="java.util.List" s="get(int)"/>
<dm p="com.scarcolo.eventour.model.Location" s="getLng()"/>
<dm p="com.scarcolo.eventour.model.event.Event" s="getLocation()"/>
<dm p="java.util.List" s="get(int)"/>
<dm p="com.scarcolo.eventour.model.Location" s="getLat()"/>
<dm p="com.scarcolo.eventour.model.event.Event" s="getLocation()"/>
<dm p="java.util.List" s="get(int)"/>
<dm p="com.scarcolo.eventour.model.Location" s="getLng()"/>
<dm p="com.scarcolo.eventour.model.event.Event" s="getLocation()"/>
<dm p="java.util.List" s="get(int)"/>
<dm p="com.scarcolo.eventour.model.event.EventResponseTour" s="setDistance(java.lang.Double)"/>
<dm p="com.scarcolo.eventour.model.event.EventResponseTour" s="setPriceTot(java.lang.Double)"/>
<dm p="com.scarcolo.eventour.model.event.EventResponse" s="getPrice()"/>
<dm p="com.scarcolo.eventour.model.event.EventResponseTour" s="getPriceTot()"/>
<dm p="java.util.List" s="add(java.lang.Object)"/>
<dm p="com.scarcolo.eventour.functions.Functionalities" s="distance(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)"/>
<dm p="com.scarcolo.eventour.model.Location" s="getLat()"/>
<dm p="com.scarcolo.eventour.model.event.Event" s="getLocation()"/>
<dm p="java.util.List" s="get(int)"/>
<dm p="java.util.List" s="size()"/>
<dm p="com.scarcolo.eventour.model.Location" s="getLng()"/>
<dm p="com.scarcolo.eventour.model.event.Event" s="getLocation()"/>
<dm p="java.util.List" s="get(int)"/>
<dm p="java.util.List" s="size()"/>
<dm p="com.scarcolo.eventour.model.event.EventResponseTourComplete" s="EventResponseTourComplete(java.util.List,com.scarcolo.eventour.model.user.UserResponse,int,int,double,double)"/>
<dm p="com.scarcolo.eventour.model.user.UserResponse" s="UserResponse(com.scarcolo.eventour.model.user.User)"/>
<dm p="java.util.List" s="size()"/>
<metrics cc="36" cm="7" vars="31" loc="84"/></method><method name="setAccountPsw(java.lang.String,java.lang.String)" s="429" e="467" n ="false" sta ="false" sync ="false" vis="public" return="com.scarcolo.eventour.service.user.ResponseEntity"  signature="(java.lang.String,java.lang.String)"><params><param type="java.lang.String"/><param type="java.lang.String"/></params><dm p="java.lang.String" s="isEmpty()"/>
<dm p="com.scarcolo.eventour.functions.Functionalities" s="isValidEmailAddress(java.lang.String)"/>
<dm p="com.scarcolo.eventour.repository.manager.ManagerRepository" s="findByMail(java.lang.String)"/>
<dm p="java.util.List" s="isEmpty()"/>
<dm p="com.scarcolo.eventour.repository.user.UserRepository" s="findByMail(java.lang.String)"/>
<dm p="java.lang.String" s="isEmpty()"/>
<dm p="com.scarcolo.eventour.model.AccountResponse" s="AccountResponse(java.lang.String,java.lang.Object)"/>
<dm p="com.scarcolo.eventour.model.user.User" s="setPassword(java.lang.String)"/>
<dm p="java.util.List" s="get(int)"/>
<dm p="java.util.List" s="get(int)"/>
<dm p="com.scarcolo.eventour.model.AccountResponse" s="AccountResponse(java.lang.String,java.lang.Object)"/>
<dm p="com.scarcolo.eventour.model.user.UserResponse" s="UserResponse(com.scarcolo.eventour.model.user.User)"/>
<dm p="java.util.List" s="get(int)"/>
<dm p="java.util.List" s="get(int)"/>
<dm p="com.scarcolo.eventour.repository.manager.RequestRepository" s="findByManagerId(java.lang.String)"/>
<dm p="com.scarcolo.eventour.model.manager.Manager" s="getId()"/>
<dm p="java.util.List" s="get(int)"/>
<dm p="com.scarcolo.eventour.model.request.Request" s="isActive()"/>
<dm p="com.scarcolo.eventour.model.AccountResponse" s="AccountResponse(java.lang.String,java.lang.Object)"/>
<dm p="com.scarcolo.eventour.model.manager.Manager" s="setPassword(java.lang.String)"/>
<dm p="java.util.List" s="get(int)"/>
<dm p="java.util.List" s="get(int)"/>
<dm p="com.scarcolo.eventour.model.manager.ManagerPlusResponse" s="ManagerPlusResponse(com.scarcolo.eventour.model.manager.Manager,com.scarcolo.eventour.model.request.Request)"/>
<dm p="java.util.List" s="get(int)"/>
<dm p="com.scarcolo.eventour.model.AccountResponse" s="AccountResponse(java.lang.String,java.lang.Object)"/>
<dm p="com.scarcolo.eventour.model.AccountResponse" s="AccountResponse(java.lang.String,java.lang.Object)"/>
<metrics cc="7" cm="6" vars="4" loc="22"/></method><method name="sendNews()" s="470" e="498" n ="false" sta ="false" sync ="false" vis="public" return="java.lang.Integer"  signature="()"><dm p="java.util.ArrayList" s="ArrayList&lt;User&gt;()"/>
<dm p="java.util.List" s="isEmpty()"/>
<dm p="com.scarcolo.eventour.model.user.User" s="getNewsletter()"/>
<dm p="com.scarcolo.eventour.model.user.User" s="setNewsletter(java.lang.Boolean)"/>
<dm p="com.scarcolo.eventour.model.user.User" s="getNewsletter()"/>
<dm p="com.scarcolo.eventour.repository.event.EventRepository" s="findByTypesAndLocationRegioneLike(java.lang.String[],java.lang.String,com.scarcolo.eventour.repository.event.Pageable)"/>
<dm p="com.scarcolo.eventour.model.user.User" s="getTypes()"/>
<dm p="com.scarcolo.eventour.model.Location" s="getRegione()"/>
<dm p="com.scarcolo.eventour.model.user.User" s="getResidence()"/>
<dm p="com.scarcolo.eventour.functions.Mail" s="sendNewsletterMsg(java.lang.String,java.util.List)"/>
<dm p="com.scarcolo.eventour.model.user.User" s="getEmail()"/>
<metrics cc="6" cm="4" vars="3" loc="16"/></method>
</type></root>